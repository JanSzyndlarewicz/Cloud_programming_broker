version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672" # Management UI (optional)
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  event1_publisher:
    build: ./event1_publisher
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./event1_publisher:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event1_publisher"]
    deploy:
      replicas: 3  # Run 3 instances of event1_publisher

  event2_publisher:
    build: ./event2_publisher
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./event2_publisher:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event2_publisher"]

  event3_publisher:
    build: ./event3_publisher
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./event3_publisher:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event3_publisher"]

  event1_consumer:
    build: ./event1_consumer
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      PYTHONPATH: /app
    volumes:
      - ./event1_consumer:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event1_consumer"]
    deploy:
      replicas: 2

  event2_consumer:
    build: ./event2_consumer
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      PYTHONPATH: /app
    volumes:
      - ./event2_consumer:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event2_consumer"]

  event4_consumer:
    build: ./event4_consumer
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      PYTHONPATH: /app
    volumes:
      - ./event4_consumer:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event4_consumer"]

  event3_consumer_event4_publisher:
    build: ./event3_consumer_event4_publisher
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      PYTHONPATH: /app
    volumes:
      - ./event3_consumer_event4_publisher:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "event3_consumer_event4_publisher"]